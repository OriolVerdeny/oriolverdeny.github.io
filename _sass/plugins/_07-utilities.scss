/*-----------------------------------------------------------------------------------*/
/*	07. UTILITIES
/*-----------------------------------------------------------------------------------*/

// This selects any HTML element where the class attribute contains the substring "space" anywhere in the class name.
// It is useful in a utility-based CSS system, such as when defining spacing helpers (.space10, .space20, etc.).

// <div class="my-space"></div>   <!-- Matches -->
// <div class="space-large"></div> <!-- Matches -->
// <div class="extra-space-small"></div> <!-- Matches -->
// <div class="spacious"></div> <!-- Does NOT match (no "space" exactly) -->

// width: 100%; Ensures that the selected elements take up the full width of their container.
// display: block; Forces the elements to behave as block-level elements, making them take up the full width by default and stack vertically.

// [class*="space"] {
//   width: 100%;
//   display: block;
// }

// I incorporated the width and display properties directlyinto .space#{$size} because they were interfering with my custom spacing classes.
$space-sizes: ();

@for $i from 0 through 40 {
    $size: $i * 0.25rem;
    $space-sizes: map-merge($space-sizes, ($i * 5: $size));
}

@each $size, $value in $space-sizes {
  .m-#{$size} { margin: $value; }
  .p-#{$size} { padding: $value; }
  .space#{$size} { 
    height: $value; 
    width: 100%; 
    display: block;
  }
  .mt-#{$size} { margin-top: $value; }
  .pt-#{$size} { padding-top: $value; }
  .mr-#{$size} { margin-right: $value; }
  .pr-#{$size} { padding-right: $value; }
  .mb-#{$size} { margin-bottom: $value; }
  .pb-#{$size} { padding-bottom: $value; }
  .ml-#{$size} { margin-left: $value; }
  .pl-#{$size} { padding-left: $value; }
}



@media (min-width: 1680px) {
  .col-xxl {
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -webkit-box-flex: 1;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
  }

  .col-xxl-auto {
    -webkit-box-flex: 0;
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    width: auto;
    max-width: none;
  }

  @for $i from 1 through 12 {
    $width: ($i / 12) * 100%;
    $offset: (($i - 1) / 12) * 100%;

    .col-xxl-#{$i} {
      -webkit-box-flex: 0;
      -ms-flex: 0 0 $width;
      flex: 0 0 $width;
      max-width: $width;
    }

    .offset-xxl-#{$i - 1} {
      margin-left: $offset;
    }
  }

}



@for $i from 1 through 200 {
    .fs-#{$i} {
        font-size: #{$i}px;
    }
}