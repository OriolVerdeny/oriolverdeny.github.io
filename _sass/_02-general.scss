/*-----------------------------------------------------------------------------------*/
/*  02. GENERAL
/*-----------------------------------------------------------------------------------*/



html {
    font-size: $base-font-size;
    scroll-behavior: smooth;
}

// Global Body Styles
body {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    font-family: 'Nunito', sans-serif;
    color: $color-gray-dark;
    font-size: inherit;
    line-height: $base-line-height;
    background: $color-gray-light;
    overflow-x: hidden;
    position: relative;
}



.container {
    padding-right: 0;
    padding-left: 0;
}

// Fluid container styles
.container-fluid {
    padding-left: 20px;
    padding-right: 20px;

    .navbar & {
        padding-left: 30px;
        padding-right: 30px;
    }
}


body,
li,
address {
    line-height: $base-line-height;
}

input,
button,
select,
textarea {
    font-family: inherit;
    font-weight: normal;
    color: inherit;
}

strong {
    font-weight: bold;
}

p {
    margin: 0 0 1rem
}



// General hover transition styles
.hover {
    transition: all 200ms ease-in-out;
}

// Anchor tag-specific styles
a {
    color: $color-gray;
    transition: all 200ms ease-in-out;

    &.hover {
        transition: border 150ms ease-in-out;
        padding-bottom: 0;
        border-bottom: 1px solid transparent;

        &:hover {
            border-bottom: 1px solid $color-default;
        }
    }

    &:hover,
    &:focus {
        text-decoration: none;
        color: $color-default;
    }


}

// Specific styles for post-title and no-color links
.post-title a,
a.nocolor {
    color: inherit;
}






// Loop to generate font-weight classes from 300 to 700
@for $i from 300 through 700 {
    .font-weight-#{$i} {
        font-weight: $i;
    }
}

// strong {
//     font-weight: 500;
// }

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-top: 0;
    color: $color-gray-dark;
    font-weight: $font-weight-bold;
    letter-spacing: normal;
    margin-bottom: 0.8rem;
}


// Define font sizes (first column) and line heights (second column) for each heading level
$heading-sizes: (
    1: (1.4rem, 1.7rem),
    2: (1.3rem, 1.6rem),
    3: (1.2rem, 1.5rem),
    4: (1.1rem, 1.4rem),
    5: (1.0rem, 1.3rem),
    6: (0.9rem, 1.2rem)
);

// Loop through heading sizes and apply styles
@each $level, $sizes in $heading-sizes {

    h#{$level},
    .h#{$level} {
        font-size: nth($sizes, 1);
        line-height: nth($sizes, 2);

        // Apply margin for h5 and h6 (I disable it)
        // @if $level ==5 or $level ==6 {
        //     margin-bottom: 0.6rem;
        // }

        &.text-uppercase {
            font-size: (nth($sizes, 1) - 0.2rem);
            line-height: (nth($sizes, 2) - 0.2rem);
        }
    }

    // Scoped styles for the blog class (Yovori custom)
    .blog h#{$level},
    .blog .h#{$level} {
        font-size: nth($sizes, 1) * 1.25;
        line-height: nth($sizes, 2) + 0.5;
    }

}


// (Yovori custom)
.blog {

    h1.post-title{
        margin-bottom: 3rem;
    }

    @for $i from 1 through 6 {
        .post-title~h#{$i} {
            margin-top: 2.5rem; // More space for headings
        }
    }

    @media (max-width: 768px) {

        @for $i from 1 through 6 {
            .post-title~h#{$i} {
                margin-top: 1.5rem; // More space for headings
            }
        }
    }
}


.grid-view h2.post-title {
    margin-bottom: 1rem;
    font-size: 1.1rem;
    line-height: 1.4rem;
}

.classic-view h2.post-title,
.caption-overlay h3 {
    font-size: 1.4rem;
    line-height: 1.7rem;
}

.widget-title {
    font-size: 1rem;
    line-height: 1.3rem;
}

.section-title {
    font-size: 1.5rem;
    line-height: 1.8rem;
    margin-bottom: 1rem;

    &.larger {
        font-size: 1.8rem;
        line-height: 2.1rem;
    }

    &.text-uppercase {
        font-size: 0.9rem;
        line-height: 1.2rem;
        margin-bottom: 1rem;
    }
    &.larger.text-uppercase {
        font-size: 1.2rem;
        line-height: 1.5rem;
    }
}

.title-color {
    font-size: 0.8rem;
    line-height: 1.1rem;
    margin-bottom: 1.05rem;
    text-transform: uppercase;
}

.title-bg {
    font-size: 0.55rem;
    line-height: 1rem;
    letter-spacing: 0.025rem;
    text-transform: uppercase;
    display: inline-block;
    border-radius: 10rem;
    padding: 0.35rem 0.7rem 0.3rem;
}

.page-title {
    font-size: 2.5rem;
    line-height: 2.8rem;
    margin-bottom: 1rem;
}

.hero {
    font-size: 3rem;
    line-height: 3.6rem;
    font-weight: 500;
}



$display-sizes: (
    1: (2.5rem, 3.1rem, 500),
    2: (2rem, 2.6rem, 500),
    3: (1.6rem, 2.2rem, normal),
    4: (1.5rem, 2rem, 300)
);

@each $key, $value in $display-sizes {
    .display-#{$key} {
        font-size: nth($value, 1);
        line-height: nth($value, 2);
        font-weight: nth($value, 3);
    }
}



.lead {
    font-size: 1rem;
    line-height: 1.5rem;
}

.page-title-wrapper .lead {
    font-size: 1.1rem;
    line-height: 1.6rem;
}

.lead.larger {
    font-size: 1.2rem;
    line-height: 1.7rem;
}

.text-muted {
    color: $color-gray !important;
}


// This should be responsive. Look at py-* bootstrap classes. 

// Apply placeholder selectors to .inner
.inner {
    @extend %inner-top;
    @extend %inner-bottom;
}

// Specific styles for .inner-top and .inner-bottom
.inner-top {
    @extend %inner-top;
}

.inner-bottom {
    @extend %inner-bottom;
}

// Footer-specific styles
footer .inner {
    @extend %inner-top;
    padding-bottom: 5rem;

    @media (max-width: 992px) {
        padding-bottom: 4rem;
    }

    @media (max-width: 768px) {
        padding-bottom: 2rem;
    }
}

// Base styles for page-title-wrapper inner
.page-title-wrapper {
    .inner {
        padding-top: 5rem;
        padding-bottom: 0;
    }
    &.image-wrapper {
        .inner{
            padding-bottom: 6rem;
        }
    }
}


// Google map styles
.google-map {
    iframe {
        display: block;
    }

    &.map-full {
        height: 100%;
    }
}

#wave {
    margin: 0;
}

canvas {
    vertical-align: bottom;
}

.divider svg {
    vertical-align: bottom;
}

// not used
.pointer-none {
    pointer-events: none;
}


// Shared Styles for Bold and Medium Font Size
.shared-bold-medium {
    font-weight: $font-weight-bold;
    font-size: $medium-font-size;
}

// Apply shared class to all relevant elements
.dropcap,
.alert-link,
.blockquote-footer,
.meta,
.more,
.more-yovori,
.breadcrumbs,
.breadcrumbs *,
.isotope-filter ul li a,
.pagination ul>li>a,
.icon-blob span,
.icon-blob .step,
th,
.pricing-switcher,
.item-detailed .item-label,
.item-detailed .price,
.nav-tabs .nav-link,
.nav-uppercase .navbar-nav .nav-link,
.accordion-wrapper .card-header button,
label:not(.custom-control-label) {
    @extend .shared-bold-medium;
}




// Spacing class in Yovori

// Percentage-based spacing sizes
$spacing-sizes: (
    sm: 5%,
    md: 10%,
    lg: 20%
);

// Pixel-based spacing sizes
$rem-spacing-sizes: (
    0: 0rem,
    1: 0.25rem,
    2: 0.5rem,
    3: 1rem,
    4: 1.5rem,
    5: 3rem
);

// Responsive breakpoints
$breakpoints: (
    tablet: 768px,
    mobile: 576px
);

// Generate percentage-based spacing classes
@each $size, $value in $spacing-sizes {
    .space-t-#{$size} {
        margin-top: $value !important;
    }

    .space-b-#{$size} {
        margin-bottom: $value !important;
    }

    .space-r-#{$size} {
        margin-right: $value !important;
    }

    .space-l-#{$size} {
        margin-left: $value !important;
    }

    .space-x-#{$size} {
        margin-right: $value !important;
        margin-left: $value !important;
    }

    .space-y-#{$size} {
        margin-top: $value !important;
        margin-bottom: $value !important;
    }

    @media (max-width: map-get($breakpoints, tablet)) {
        .space-t-#{$size} {
            margin-top: $value * 0.8 !important;
        }

        .space-b-#{$size} {
            margin-bottom: $value * 0.8 !important;
        }

        .space-r-#{$size} {
            margin-right: $value * 0.8 !important;
        }

        .space-l-#{$size} {
            margin-left: $value * 0.8 !important;
        }

        .space-x-#{$size} {
            margin-right: $value * 0.8 !important;
            margin-left: $value * 0.8 !important;
        }

        .space-y-#{$size} {
            margin-top: $value * 0.8 !important;
            margin-bottom: $value * 0.8 !important;
        }
    }

    @media (max-width: map-get($breakpoints, mobile)) {
        .space-t-#{$size} {
            margin-top: $value * 0.6 !important;
        }

        .space-b-#{$size} {
            margin-bottom: $value * 0.6 !important;
        }

        .space-r-#{$size} {
            margin-right: $value * 0.6 !important;
        }

        .space-l-#{$size} {
            margin-left: $value * 0.6 !important;
        }

        .space-x-#{$size} {
            margin-right: $value * 0.6 !important;
            margin-left: $value * 0.6 !important;
        }

        .space-y-#{$size} {
            margin-top: $value * 0.6 !important;
            margin-bottom: $value * 0.6 !important;
        }
    }
}

// Generate rem-based spacing classes
@each $size, $value in $rem-spacing-sizes {
    .space-t-#{$size} {
        margin-top: $value !important;
    }

    .space-b-#{$size} {
        margin-bottom: $value !important;
    }

    .space-r-#{$size} {
        margin-right: $value !important;
    }

    .space-l-#{$size} {
        margin-left: $value !important;
    }

    .space-x-#{$size} {
        margin-right: $value !important;
        margin-left: $value !important;
    }

    .space-y-#{$size} {
        margin-top: $value !important;
        margin-bottom: $value !important;
    }

    @media (max-width: map-get($breakpoints, tablet)) {
        .space-t-#{$size} {
            margin-top: $value * 0.8 !important;
        }

        .space-b-#{$size} {
            margin-bottom: $value * 0.8 !important;
        }

        .space-r-#{$size} {
            margin-right: $value * 0.8 !important;
        }

        .space-l-#{$size} {
            margin-left: $value * 0.8 !important;
        }

        .space-x-#{$size} {
            margin-right: $value * 0.8 !important;
            margin-left: $value * 0.8 !important;
        }

        .space-y-#{$size} {
            margin-top: $value * 0.8 !important;
            margin-bottom: $value * 0.8 !important;
        }
    }

    @media (max-width: map-get($breakpoints, mobile)) {
        .space-t-#{$size} {
            margin-top: $value * 0.7 !important;
        }

        .space-b-#{$size} {
            margin-bottom: $value * 0.7 !important;
        }

        .space-r-#{$size} {
            margin-right: $value * 0.7 !important;
        }

        .space-l-#{$size} {
            margin-left: $value * 0.7 !important;
        }

        .space-x-#{$size} {
            margin-right: $value * 0.7 !important;
            margin-left: $value * 0.7 !important;
        }

        .space-y-#{$size} {
            margin-top: $value * 0.7 !important;
            margin-bottom: $value * 0.7 !important;
        }
    }
}

.responsive-spacing {
    width: 100%;
    display: block;
}